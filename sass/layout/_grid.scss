// Float Layouts (old school)

.row {
  max-width: $grid-width;
  margin: 0 auto; // center block elements inside another block element

  // COOL pseudo class trick: put margin on all rows except last child
  &:not(:last-child) {
    margin-bottom: $gutter-vertical;

    @include respond(tab-portrait) {
      margin-bottom: $gutter-vertical-small;
     }

  }

  @include respond(tab-portrait) {
    max-width: 50rem;
    padding: 0 3rem;
  }

  @include clearfix;

  // use attribute selector to keep it DRY (Don't Repeat Yourself)
  // class^= select all elements where class attribute STARTS WITH 'col-'
  // class*= any class that CONTAINS "..."
  // class$= any class that ENDS WIDTH "..."
  [class^="col-"] {
    float: left;

    &:not(:last-child) {
      margin-right: $gutter-horizontal;

      // remove gutters
      @include respond(tab-portrait) {
       margin-right: 0;
       margin-bottom: $gutter-vertical-small;
      }

    }

    @include respond(tab-portrait) {
      width: 100% !important;
    }
  }

  .col-1-of-2 {
    width: calc((100% - #{$gutter-horizontal}) / 2);
  }

  .col-1-of-3 {
    width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
  }

  .col-2-of-3 {
    width: calc(2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal});
  }

  .col-1-of-4 {
    width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
  }

  .col-2-of-4 {
    width: calc(2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal});
  }

  .col-3-of-4 {
    width: calc(3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal});
  }
}