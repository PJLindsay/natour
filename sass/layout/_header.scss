/* 95vh == at every point should be 95% of viewport height
  cover == will always try to fill element of the box
  background-position: top == top of image will be locked on resize (crop out bottom of image to keep visible on resize)
  background-position: center == will crop out top and bottom - to make image stay locked on middle part of photo!
  clip-path: polygon(x y, x y) == specify polygon where the image/thing will still be visible
  clip-path: polygon(50% 0, 100% 100%, 50% 200px, 0 100%) ==> this was kind of cool!

  75vh = 75% of viewport height -
}
*/
.header {
  height: 85vh;
  background-image: linear-gradient(
    to right bottom,
    rgba($color-primary-light, 0.8),
    rgba($color-primary-dark, 0.8)),
    url(../img/hero-small.jpg);
  background-size: cover;
  background-position: top;
  position: relative;

  // GRACEFUL DEGRADATION with @supports
  @supports (clip-path: polygon(0 0)) or (-webkit-clip-path: polygon(0 0)) {
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
    height: 95vh;
  }

  // if using high resolution device
  // (192 dpi is resolution of apple retina screen [typical reference point])
  // 600 / 16 = 37.5em || 2000 / 16 = 125 em
  @media only screen and (min-resolution: 192dpi) and (min-width: 37.5em),
         only screen and (-webkit-min-device-pixel-ratio: 2) and (min-width: 37.5em),
         only screen and (min-width: 125em)
   {
    background-image: linear-gradient(
      to right bottom,
      rgba($color-secondary-light, 0.8),
      rgba($color-secondary-dark, 0.8)),
      url(../img/hero.jpg);
  }

  @include respond(phone) {
    clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
  }

  &__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem;
  }

  &__logo {
    height: 3.5rem;
  }

  &__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
  }
}